{"version":3,"sources":["components/Context/AppContext.tsx","components/Portal/Portal.tsx","components/BlockReveal/BlockReveal.tsx","components/TransitionRoute/TransitionRoute.tsx","components/PrivateRoute/PrivateRoute.tsx","components/Container/Container.tsx","components/Form/Form.tsx","components/Input/Input.tsx","components/Modules/BasicInformation/BasicInformations.tsx","router.ts","components/FNA/FNA.tsx","components/CustomersList/Customers.ts","components/Heading/Heading.tsx","components/CustomerCard/CustomerCard.tsx","components/CustomersList/CustomerList.tsx","components/Main/Main.tsx","components/Button/Button.tsx","components/Login/Login.tsx","components/Register/Register.tsx","components/ContextualNavbar/locations.ts","components/ContextualNavbar/ContextNavButton.tsx","components/ContextualNavbar/ContextualNavbar.tsx","components/App/App.tsx","serviceWorker.ts","index.tsx"],"names":["appContext","AppContextProvider","props","React","useState","isAuthenticated","user","id","name","lastname","picture","appState","setAppState","createContext","Provider","value","children","Portal","transitionDone","mount","document","getElementById","useEffect","console","log","createPortal","BlockReveal","settings","animationDone","halfwayDone","contentElement","useRef","revealElement","transitionSettings","lr","val","origin","origin2","rl","tb","bt","default","initial","halfway","transformSettings","setTransformSettings","hidden","area","bgColor","direction","duration","easing","delay","onCover","onStart","onComplete","revealSettings","setRevealSettings","setAnimating","revealRef","setRevealRef","contentRef","setContentRef","opacity","left","top","width","height","zIndex","background","WebkitTransform","transform","WebkitTransformOrigin","transformOrigin","styles","contentElementStyles","setContentElementStyles","useLayoutEffect","defaults","Object","assign","current","style","position","animationStepTwo","targets","update","animation","progress","previousStyles","renderChild","complete","done","animationStepOne","a","webkitTransformOrigin","anime","scaleX","scaleY","child","Children","map","c","cloneElement","ref","className","TransitionRoute","rest","setDone","setRenderChild","location","useLocation","PrivateRoute","useContext","to","pathname","Container","as","As","fluid","classname","Form","stateToUpdate","state","setState","handleUpdateState","property","split","previousState","inputChildren","change","Input","label","muted","multi","onChange","ev","currentTarget","length","classList","add","remove","htmlFor","BasicInformation","firstname","dob","age","street","city","country","postalCode","information","setInformation","data-content","values","day","parseInt","month","year","dobDate","Date","today","difference","Math","abs","getTime","toFixed","handleDOBtoAgeConversion","disabled","router","FNA","path","useRouteMatch","useParams","exact","customers","completed","modules","dependants","income","debt","insurance","retirement","Heading","text","CustomerCard","title","url","cardComplete","color","icon","userIcon","babyIcon","donateIcon","landmarkIcon","balanceScale","caravanIcon","trashIcon","checkCircle","CustomerList","search","setSearch","customerList","setCustomerList","handleWildCards","query","wildcardquery","filter","q","includes","cs","wq","queryResults","i","y","push","Set","searchWithoutWq","s","replace","join","toLowerCase","output","concat","handleSearch","key","Main","Button","onClick","isDisabled","Login","username","password","credentials","setCredentials","type","autoComplete","Register","emailAddress","reType","registerInfo","setRegisterInfo","passwordMatch","setPasswordMatch","locations","ContextNavButton","show","ContextualNavbar","setShow","items","setItems","handleShow","loc","match","App","isLocalhost","Boolean","window","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","URL","process","href","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.80f76f3e.chunk.js","sourcesContent":["import React from 'react';\r\n\r\ntype User = {\r\n    id: string;\r\n    name: string;\r\n    lastname: string;\r\n    picture: string;\r\n}\r\n\r\ninterface IAppContext {\r\n    isAuthenticated: boolean;\r\n    user: User;\r\n};\r\n\r\nexport type IAppState = [IAppContext, React.Dispatch<React.SetStateAction<IAppContext>>];\r\n\r\nexport let appContext: React.Context<IAppState>;\r\n\r\nexport const AppContextProvider = (props: { children: JSX.Element | JSX.Element[] }) => {\r\n    \r\n    const [appState, setAppState] = React.useState<IAppContext>({\r\n        isAuthenticated: true,\r\n        user: {\r\n            id: \"\",\r\n            name: \"\",\r\n            lastname: \"\",\r\n            picture: \"\"\r\n        }\r\n    });\r\n\r\n    appContext = React.createContext<[IAppContext, React.Dispatch<React.SetStateAction<IAppContext>>]>([appState, setAppState]);\r\n    \r\n    return (\r\n        <appContext.Provider value={[appState, setAppState]}>\r\n            {props.children}\r\n        </appContext.Provider>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { createPortal } from \"react-dom\";\r\n\r\ninterface IPortal {\r\n    children: JSX.Element | JSX.Element[];\r\n    transitionDone: boolean;\r\n}\r\n\r\nexport const Portal = ({children, transitionDone}: IPortal) => {\r\n    const mount = document.getElementById(\"transition\") as HTMLElement;\r\n    React.useEffect(() => console.log(transitionDone), [transitionDone]);\r\n\r\n    return createPortal(!transitionDone && children, mount);\r\n}","// based on https://github.com/codrops/BlockRevealers/\r\n\r\nimport React from 'react';\r\nimport anime from \"animejs\";\r\n\r\ninterface IRevealOptionsSettings {\r\n    direction: \"lr\" | \"rl\" | \"tb\" | \"bt\";\r\n    bgColor: string;\r\n    duration: number;\r\n    easing: \"linear\" | \"easeInQuad\" | \"easeInSine\" | \"easeOutSine\" | \"easeInOutSine\"\r\n    | \"easeInOutQuint\" | \"easeInCubic\" | \"easeInOutCubic\" | \"easeInQuint\" | \"easeOutQuint\"\r\n    | \"easeInOutQuint\" | \"easeInCirc\" | \"easeOutCirc\" | \"easeInOutCirc\" | \"easeInQuad\"\r\n    | \"easeOutQuad\" | \"easeInOutQuad\" | \"easeInQuart\" | \"easeOutQuart\" | \"easeInOutQuart\"\r\n    | \"easeInExpo\" | \"easeOutExpo\" | \"easeInOutExpo\";\r\n    area: number;\r\n    delay: number;\r\n    onCover: (contentElement?: HTMLElement, revealElement?: HTMLElement) => boolean;\r\n    onStart: (contentElement?: HTMLElement, revealElement?: HTMLElement) => boolean;\r\n    onComplete: (contentElement?: HTMLElement, revealElement?: HTMLElement) => boolean;\r\n}\r\n\r\ninterface IRevealOptions {\r\n    hidden: boolean;\r\n    settings: IRevealOptionsSettings;\r\n}\r\n\r\ninterface ITransformSettings {\r\n    val: string;\r\n    origin: {\r\n        initial: string;\r\n        halfway: string;\r\n    };\r\n}\r\n\r\ninterface IReveal {\r\n    children: JSX.Element | JSX.Element[];\r\n    animationDone?: (val: boolean) => void;\r\n    halfwayDone?: (val: boolean) => void;\r\n    settings?: IRevealOptions\r\n}\r\n\r\ninterface ISettings {\r\n    val: string;\r\n    origin: string;\r\n    origin2: string;\r\n}\r\n\r\ninterface IAnimationSettings extends IRevealOptionsSettings {\r\n    targets: Element | Text | null | any;\r\n    complete: (a: any) => void;\r\n    update?: (a: any) => void;\r\n    scaleX?: [number, number];\r\n    scaleY?: [number, number];\r\n};\r\n\r\nexport const BlockReveal = ({ children, settings, animationDone, halfwayDone }: IReveal) => {\r\n\r\n    const contentElement = React.useRef<HTMLDivElement>(null);\r\n    const revealElement = React.useRef<HTMLDivElement>(null);\r\n\r\n    const transitionSettings: {[key: string]: ISettings} = {\r\n        lr: {\r\n            val: \"scale3d(1,1,1)\",\r\n            origin: \"0% 50%\",\r\n            origin2: \"100% 50%\"\r\n        },\r\n        rl: {\r\n            val: \"scale3d(1,1,1)\",\r\n            origin: \"100% 50%\",\r\n            origin2: \"0% 50%\"\r\n        },\r\n        tb: {\r\n            val: \"scale3d(1,1,1)\",\r\n            origin: \"50% 0%\",\r\n            origin2: \"50% 100%\"\r\n        },\r\n        bt: {\r\n            val: \"scale3d(1,1,1)\",\r\n            origin: \"50% 100%\",\r\n            origin2: \"50% 0%\"\r\n        },\r\n        default: {\r\n            val: \"scale3d(1,1,1)\",\r\n            origin: \"0% 50%\",\r\n            origin2: \"100% 50%\"\r\n        }\r\n\r\n    }\r\n\r\n    const [transformSettings, setTransformSettings] = React.useState<ITransformSettings>({\r\n        val: transitionSettings.lr.val,\r\n        origin: {\r\n            initial: transitionSettings.lr.origin,\r\n            halfway: transitionSettings.lr.origin2\r\n        }\r\n    });\r\n\r\n    const [revealSettings, setRevealSettings] = React.useState<IRevealOptions>({\r\n        hidden: true,\r\n        settings: {\r\n            area: 0,\r\n            bgColor: \"#00C9A7\",\r\n            direction: \"lr\",\r\n            duration: 500,\r\n            easing: \"easeInOutExpo\",\r\n            delay: 0,\r\n            onCover: function (contentElement, revealElement) { return false },\r\n            onStart: function (contentElement, revealElement) { return false },\r\n            onComplete: function (contentElement, revealElement) { return false }\r\n        }\r\n    });\r\n\r\n    const [animating, setAnimating] = React.useState(false);\r\n    const [revealRef, setRevealRef] = React.useState<HTMLDivElement>();\r\n    const [contentRef, setContentRef] = React.useState<HTMLElement>();\r\n    const [styles, setStyles] = React.useState({\r\n        opacity: 1,\r\n        left: 0,\r\n        top: 0,\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n        zIndex: 1000,\r\n        background: \"#00C9A7\",\r\n        WebkitTransform: transformSettings.val,\r\n        transform: transformSettings.val,\r\n        WebkitTransformOrigin: transformSettings.origin.initial,\r\n        transformOrigin: transformSettings.origin.initial\r\n    });\r\n    const [contentElementStyles, setContentElementStyles] = React.useState({\r\n        opacity: 0\r\n    });\r\n\r\n    function isNotNull<T>(element: T | null) {\r\n        return (element as T);\r\n    }\r\n\r\n    function done() {\r\n        if (animationDone) {\r\n            return animationDone(true);\r\n        }\r\n        return;\r\n    }\r\n\r\n    function renderChild() {\r\n        if (halfwayDone) {\r\n            return halfwayDone(true);\r\n        }\r\n        return;\r\n    }\r\n\r\n    React.useLayoutEffect(() => {\r\n        if (revealSettings.settings.direction) {\r\n            setTransformSettings({\r\n                val: transitionSettings[revealSettings.settings.direction].val,\r\n                origin: {\r\n                    initial: transitionSettings[revealSettings.settings.direction].origin,\r\n                    halfway: transitionSettings[revealSettings.settings.direction].origin2\r\n                }\r\n            });\r\n        }\r\n\r\n        if (settings) setRevealSettings(defaults => (Object.assign({}, defaults, settings)));\r\n\r\n        setRevealRef(isNotNull(revealElement.current));\r\n        setContentRef(isNotNull(contentElement.current));\r\n\r\n        if (revealRef && contentRef) {\r\n            contentRef.style.position = \"relative\";\r\n            contentRef.style.width = \"100%\";\r\n            contentRef.style.height = \"100%\";\r\n            setAnimating(true);\r\n            const animationStepTwo: IAnimationSettings = {\r\n                targets: revealRef,\r\n                ...revealSettings.settings,\r\n                update: function (animation: any) {\r\n                    if (animation.progress > 1) {\r\n                        setAnimating(true);\r\n                        setContentElementStyles(previousStyles => (Object.assign({}, previousStyles, { opacity: 1 })));\r\n                        renderChild();\r\n                    }\r\n                },\r\n                complete: function () {\r\n                    setAnimating(false);\r\n                    revealSettings.settings.onComplete(contentRef, revealRef);\r\n                    done();\r\n                }\r\n            };\r\n    \r\n            const animationStepOne: IAnimationSettings = {\r\n                targets: revealRef,\r\n                ...revealSettings.settings,\r\n                complete: function (a: any) {\r\n                    revealRef.style.webkitTransformOrigin = revealRef.style.transformOrigin = transformSettings.origin.halfway;\r\n                    if (typeof revealSettings.settings.onCover === \"function\") {\r\n                        revealSettings.settings.onCover(contentRef, revealRef);\r\n                    };\r\n                    anime(animationStepTwo);\r\n                }\r\n            };\r\n    \r\n            if (revealSettings.settings.direction === \"lr\" || revealSettings.settings.direction === \"rl\") {\r\n                animationStepOne.scaleX = [0, 1];\r\n                animationStepTwo.scaleX = [1, revealSettings.settings.area / 100];\r\n            } else {\r\n                animationStepOne.scaleY = [0, 1];\r\n                animationStepTwo.scaleY = [1, revealSettings.settings.area / 100]\r\n            };\r\n    \r\n            revealSettings.settings.onStart(contentRef, revealRef);\r\n            \r\n            anime(animationStepOne);\r\n        }\r\n    }, [revealRef, contentRef]);\r\n\r\n    const child = React.Children.map(children, c => {\r\n        return React.cloneElement(c, { style: contentElementStyles }, [\r\n            c.props.children])\r\n    });\r\n\r\n    return (\r\n        <div ref={contentElement} className=\"content-revealer\">\r\n            {child}\r\n            <div ref={revealElement} className=\"block-revealer\" style={{ position: \"absolute\", ...styles }}></div>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { Route, RouteProps, useLocation } from 'react-router-dom';\r\nimport { Portal } from '../Portal/Portal';\r\nimport { BlockReveal } from '../BlockReveal/BlockReveal';\r\n\r\ninterface ITransitionRoute extends RouteProps {\r\n    children?: JSX.Element | JSX.Element[];\r\n}\r\n\r\nexport const TransitionRoute = ({ children, ...rest }: ITransitionRoute) => {\r\n    const [done, setDone] = React.useState(false);\r\n    const [renderChild, setRenderChild] = React.useState(true);\r\n    const handleAnimationDone = (value: boolean) => {\r\n        setDone(value);\r\n    }\r\n    const handleRenderChild = (value: boolean) => {\r\n        setRenderChild(value);\r\n    }\r\n\r\n    const location = useLocation();\r\n    \r\n    React.useLayoutEffect(() => {\r\n        if (done) setDone(false);\r\n        setRenderChild(false);\r\n    }, [children, location])\r\n\r\n    return (\r\n        <Route {...rest}>\r\n            {!done &&\r\n                <Portal transitionDone={done}>\r\n                    <BlockReveal animationDone={handleAnimationDone} halfwayDone={handleRenderChild} >\r\n                        <div style={{width: \"100%\", height: \"100%\"}}></div>\r\n                    </BlockReveal>\r\n                </Portal>\r\n            }\r\n            {renderChild && children}\r\n        </Route>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { Route, useLocation, Redirect, RouteProps } from 'react-router-dom';\r\nimport { appContext, IAppState } from '../Context/AppContext';\r\nimport { TransitionRoute } from '../TransitionRoute/TransitionRoute';\r\n\r\ninterface Props extends RouteProps { children: JSX.Element | JSX.Element[] };\r\n\r\nexport const PrivateRoute = ({ children, ...rest }: Props) => {\r\n    \r\n    const [user, setUser] = React.useContext<IAppState>(appContext);\r\n    const [state, setState] = React.useState(false);\r\n    \r\n    return (\r\n        <TransitionRoute {...rest}>\r\n            {user.isAuthenticated ?\r\n                children : <Redirect to={{ pathname: \"/login\" }} />\r\n            }\r\n        </TransitionRoute>\r\n    );\r\n}","import React from 'react';\r\n\r\ninterface IContainer extends React.DetailedHTMLProps<React.HTMLAttributes<HTMLDivElement>, HTMLDivElement> {\r\n    children: React.ReactNode;\r\n    as?: \"div\" | \"section\" | \"article\";\r\n    fluid?: boolean;\r\n    classname?: string;\r\n}\r\n\r\nexport const Container = ({as: As = \"section\", children, fluid, classname, ...rest}: IContainer) => {\r\n    \r\n    return (\r\n        <As className={`${fluid ? \"fluid\" : \"container\"}${classname ? ` ${classname}` : \"\"}`} {...rest}>\r\n            {children}\r\n        </As>\r\n    );\r\n}","import React, { HTMLAttributes } from 'react';\r\n\r\ninterface IForm extends React.DetailedHTMLProps<React.FormHTMLAttributes<HTMLFormElement>, HTMLFormElement> {\r\n    stateToUpdate: [{ [key: string]: string }, React.Dispatch<React.SetStateAction<{ [key: string]: string }>>];\r\n    children: JSX.Element | JSX.Element[];\r\n}\r\n\r\nexport const Form = ({ stateToUpdate, children, ...rest }: IForm): JSX.Element => {\r\n\r\n    const [state, setState] = stateToUpdate;\r\n\r\n    const handleUpdateState = (value: string, id: string) => {\r\n        const property = id.split(\"-\")[1];\r\n        state[property] = value;\r\n        setState(previousState => Object.assign({}, previousState, state));\r\n        console.log(state);\r\n    }\r\n\r\n    const inputChildren = React.Children.map(children, child => React.cloneElement(child, { change: handleUpdateState, ...child.props }));\r\n    \r\n    return (\r\n        <form className=\"form\" {...rest}>\r\n            {inputChildren}\r\n        </form>\r\n    );\r\n}","import React, { HTMLAttributes } from 'react';\r\n\r\ninterface IInput extends React.DetailedHTMLProps<React.InputHTMLAttributes<HTMLInputElement>, HTMLInputElement> {\r\n    label: string;\r\n    id: string;\r\n    value: string;\r\n    change?: (value: string, id: string) => void;\r\n    muted?: string;\r\n    multi?: boolean\r\n}\r\n\r\nexport const Input = ({ label, id, value, change, muted, multi, ...rest }: IInput) => {\r\n    \r\n    const handleChange = (ev: React.ChangeEvent<HTMLInputElement>) => {\r\n        const value = ev.currentTarget.value;\r\n        const id = ev.currentTarget.id\r\n        if (value.length) ev.currentTarget.classList.add(\"not-empty\");\r\n        if (value.length < 1) ev.currentTarget.classList.remove(\"not-empty\");\r\n        if (change) return change(value, id);\r\n    }\r\n    \r\n    return (\r\n        <div className={`input${multi ? \" multi\" : \"\"}`}>\r\n            <input onChange={handleChange} id={id} name={id} {...rest} value={value} />\r\n            <label htmlFor={id}>{label}</label>\r\n            {muted && <small>{muted}</small>}\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { Container } from '../../Container/Container';\r\nimport { Form } from '../../Form/Form';\r\nimport { Input } from '../../Input/Input';\r\n\r\nexport const BasicInformation = () => {\r\n\r\n    const [information, setInformation] = React.useState<{ [key: string]: string }>({\r\n        firstname: \"\",\r\n        lastname: \"\",\r\n        dob: \"\",\r\n        age: \"\",\r\n        street: \"\",\r\n        city: \"\",\r\n        country: \"\",\r\n        postalCode: \"\"\r\n    });\r\n\r\n    const handleDOBtoAgeConversion = (dob: string) => {\r\n        const values = dob.split(/[-/]/);\r\n        if (values.length === 3) {\r\n            const day = parseInt(values[0]);\r\n            const month = parseInt(values[1]);\r\n            const year = parseInt(values[2]);\r\n\r\n            const dobDate = new Date(year, month, day);\r\n            const today = new Date();\r\n            const difference = Math.abs(today.getTime() - dobDate.getTime());\r\n            setInformation(previousState => (Object.assign({}, previousState, { age: (difference / (1000 * 3600 * 24 * 365.25)).toFixed(0) })));\r\n        }\r\n    }\r\n    \r\n    \r\n    return (\r\n        <Container fluid as=\"section\" classname=\"basic-information\">\r\n            <Container fluid classname=\"container basic-information-container\" as=\"section\" data-content=\"Basic Information\">\r\n                <Form stateToUpdate={[information, setInformation]} onChange={() => handleDOBtoAgeConversion(information.dob)}>\r\n                    <Input id=\"basicInformation-firstname\" multi label=\"Firstname\" value={information.firstname} />\r\n                    <Input id=\"basicInformation-lastname\" multi label=\"Lastname\" value={information.lastname} />\r\n                    <Input id=\"basicInformation-dob\" multi label=\"Date of Birth\" value={information.dob} muted=\"dd/mm/aaaa\" />\r\n                    <Input id=\"basicInformation-age\" multi disabled label=\"Age\" value={information.age} muted=\"Will fill itself once the date of birth is entered\" />\r\n                </Form>\r\n            </Container>\r\n            <Container fluid classname=\"container address-container\" as=\"section\" data-content=\"Address\">\r\n                <Form stateToUpdate={[information, setInformation]}>\r\n                    <Input id=\"basicInformation-street\" label=\"Street\" value={information.street} />\r\n                    <Input id=\"basicInformation-city\" label=\"City\" value={information.city} />\r\n                    <Input id=\"basicInformation-country\" multi label=\"Country\" value={information.country} />\r\n                    <Input id=\"basicInformation-postalCode\" multi label=\"Postal Code\" value={information.postalCode} />\r\n                </Form>\r\n            </Container>\r\n        </Container>    \r\n    )\r\n}\r\n","import { BasicInformation } from \"./components/Modules/BasicInformation/BasicInformations\";\r\n\r\nexport const router = {\r\n    home: \"/\",\r\n    login: \"/login\",\r\n    register: \"/register\",\r\n    customers: \"/customers\",\r\n    basicInformation: \"/basicInformation\",\r\n    dependants: \"/dependants\",\r\n    income: \"/income\",\r\n    debt: \"/debt\",\r\n    insurance: \"/insurance\",\r\n    retirement: \"/retirement\"\r\n}","import React from 'react';\r\nimport { Container } from '../Container/Container';\r\nimport { Switch, useRouteMatch, useParams, Route } from 'react-router-dom';\r\nimport { TransitionRoute } from '../TransitionRoute/TransitionRoute';\r\nimport { BasicInformation } from '../Modules/BasicInformation/BasicInformations';\r\nimport { router } from '../../router';\r\n\r\nexport const FNA = () => {\r\n\r\n    const { path } = useRouteMatch();\r\n    const { id } = useParams();\r\n\r\n    return (\r\n        <Container fluid>\r\n            <Switch>\r\n                <Route exact path={`${path}`}>\r\n                    <BasicInformation />\r\n                </Route>\r\n                <TransitionRoute path={`${path}/${id}${router.basicInformation}`}>\r\n                    <BasicInformation />\r\n                </TransitionRoute>\r\n                <TransitionRoute path={`${path}/${id}${router.dependants}`}>\r\n                    <BasicInformation />\r\n                </TransitionRoute>\r\n                <TransitionRoute path={`${path}/${id}${router.income}`}>\r\n                    <BasicInformation />\r\n                </TransitionRoute>\r\n                <TransitionRoute path={`${path}/${id}${router.debt}`}>\r\n                    <BasicInformation />\r\n                </TransitionRoute>\r\n                <TransitionRoute path={`${path}/${id}${router.insurance}`}>\r\n                    <BasicInformation />\r\n                </TransitionRoute>\r\n                <TransitionRoute path={`${path}/${id}${router.retirement}`}>\r\n                    <BasicInformation />\r\n                </TransitionRoute>\r\n            </Switch>\r\n        </Container>\r\n    );\r\n}\r\n","interface IModules {\r\n    [key: string]: boolean;\r\n    user: boolean;\r\n    dependants: boolean;\r\n    income: boolean;\r\n    debt: boolean;\r\n    insurance: boolean;\r\n    retirement: boolean;\r\n}\r\n\r\ninterface ICustomers {\r\n    id: string;\r\n    name: string;\r\n    lastname: string;\r\n    completed: boolean;\r\n    modules: IModules\r\n}\r\n\r\nexport const customers: ICustomers[] = [\r\n    {\r\n        id: \"1\",\r\n        name: \"Ferdinand\",\r\n        lastname: \"Crush\",\r\n        completed: false,\r\n        modules: {\r\n            user: false,\r\n            dependants: false,\r\n            income: false,\r\n            debt: false,\r\n            insurance: false,\r\n            retirement: false\r\n        },\r\n    },\r\n    {\r\n        id: \"2\",\r\n        name: \"Ferdinansadasd\",\r\n        lastname: \"Crushasdas\",\r\n        completed: false,\r\n        modules: {\r\n            user: true,\r\n            dependants: false,\r\n            income: false,\r\n            debt: false,\r\n            insurance: false,\r\n            retirement: false\r\n        },\r\n    },\r\n    {\r\n        id: \"3\",\r\n        name: \"Ferdinand\",\r\n        lastname: \"Crush\",\r\n        completed: true,\r\n        modules: {\r\n            user: true,\r\n            dependants: false,\r\n            income: false,\r\n            debt: false,\r\n            insurance: false,\r\n            retirement: false\r\n        },\r\n    },\r\n    {\r\n        id: \"4\",\r\n        name: \"Ferdinand\",\r\n        lastname: \"Crush\",\r\n        completed: false,\r\n        modules: {\r\n            user: true,\r\n            dependants: false,\r\n            income: false,\r\n            debt: false,\r\n            insurance: false,\r\n            retirement: false\r\n        },\r\n    },\r\n    {\r\n        id: \"5\",\r\n        name: \"Ferdinand\",\r\n        lastname: \"Crush\",\r\n        completed: false,\r\n        modules: {\r\n            user: true,\r\n            dependants: false,\r\n            income: false,\r\n            debt: false,\r\n            insurance: false,\r\n            retirement: false\r\n        },\r\n    },\r\n    {\r\n        id: \"6\",\r\n        name: \"Ferdinand\",\r\n        lastname: \"Crush\",\r\n        completed: false,\r\n        modules: {\r\n            user: true,\r\n            dependants: false,\r\n            income: false,\r\n            debt: false,\r\n            insurance: false,\r\n            retirement: false\r\n        },\r\n    },\r\n    {\r\n        id: \"7\",\r\n        name: \"Ferdinand\",\r\n        lastname: \"Crush\",\r\n        completed: false,\r\n        modules: {\r\n            user: true,\r\n            dependants: false,\r\n            income: false,\r\n            debt: false,\r\n            insurance: false,\r\n            retirement: false\r\n        },\r\n    },\r\n    {\r\n        id: \"8\",\r\n        name: \"Ferdinand\",\r\n        lastname: \"Crush\",\r\n        completed: false,\r\n        modules: {\r\n            user: true,\r\n            dependants: true,\r\n            income: false,\r\n            debt: false,\r\n            insurance: false,\r\n            retirement: false\r\n        },\r\n    },\r\n    {\r\n        id: \"9\",\r\n        name: \"Ferdinand\",\r\n        lastname: \"Crush\",\r\n        completed: false,\r\n        modules: {\r\n            user: true,\r\n            dependants: false,\r\n            income: false,\r\n            debt: false,\r\n            insurance: false,\r\n            retirement: false\r\n        },\r\n    },\r\n    {\r\n        id: \"10\",\r\n        name: \"Ferdinand\",\r\n        lastname: \"Crush\",\r\n        completed: false,\r\n        modules: {\r\n            user: true,\r\n            dependants: false,\r\n            income: false,\r\n            debt: false,\r\n            insurance: false,\r\n            retirement: false\r\n        },\r\n    },\r\n    {\r\n        id: \"11\",\r\n        name: \"Ferdinand\",\r\n        lastname: \"Crush\",\r\n        completed: false,\r\n        modules: {\r\n            user: true,\r\n            dependants: false,\r\n            income: false,\r\n            debt: false,\r\n            insurance: false,\r\n            retirement: false\r\n        },\r\n    },\r\n    {\r\n        id: \"12\",\r\n        name: \"Ferdinand\",\r\n        lastname: \"Crush\",\r\n        completed: false,\r\n        modules: {\r\n            user: true,\r\n            dependants: false,\r\n            income: false,\r\n            debt: false,\r\n            insurance: false,\r\n            retirement: false\r\n        },\r\n    },\r\n    {\r\n        id: \"13\",\r\n        name: \"Ferdinand\",\r\n        lastname: \"Crush\",\r\n        completed: false,\r\n        modules: {\r\n            user: true,\r\n            dependants: false,\r\n            income: false,\r\n            debt: false,\r\n            insurance: false,\r\n            retirement: false\r\n        },\r\n    },\r\n]\r\n\r\n// export const customers: {\r\n//     id: string,\r\n//     name: string,\r\n//     lastname: string\r\n// }[] = [];","import React, { ReactElement, ReactComponentElement } from 'react';\r\n\r\ninterface IHeading extends React.DetailedHTMLProps<React.HTMLAttributes<HTMLHeadingElement>, HTMLHeadingElement> {\r\n    as?: \"h1\" | \"h2\" | \"h3\" | \"h4\" | \"h5\" | \"h6\";\r\n    text?: string;\r\n    children?: React.ReactNode;\r\n}\r\n\r\nexport const Heading = ({as: As = \"h1\", text, children, ...rest}: IHeading) => {\r\n    return (\r\n        <As className={`heading ${As}`} {...rest}>\r\n            {text && text}\r\n            {children && children}\r\n        </As>\r\n    );\r\n}","import React from 'react';\r\nimport { Heading } from '../Heading/Heading';\r\nimport { Link, useLocation, useRouteMatch } from 'react-router-dom';\r\nimport { Icon, InlineIcon } from \"@iconify/react\";\r\nimport trashIcon from \"@iconify/icons-fa-solid/trash-alt\";\r\nimport donateIcon from '@iconify/icons-fa-solid/donate';\r\nimport landmarkIcon from '@iconify/icons-fa-solid/landmark';\r\nimport balanceScale from '@iconify/icons-fa-solid/balance-scale';\r\nimport babyIcon from '@iconify/icons-fa-solid/baby';\r\nimport userIcon from '@iconify/icons-fa-solid/user';\r\nimport caravanIcon from '@iconify/icons-fa-solid/caravan';\r\nimport checkCircle from '@iconify/icons-fa-solid/check-circle';\r\n\r\ninterface IModules {\r\n    user: boolean;\r\n    dependants: boolean;\r\n    income: boolean;\r\n    debt: boolean;\r\n    insurance: boolean;\r\n    retirement: boolean;\r\n}\r\n\r\ninterface ICustomerCard {\r\n    id: string;\r\n    title: string;\r\n    url: string;\r\n    cardComplete: boolean;\r\n    modules: IModules;\r\n}\r\n\r\nexport const CustomerCard = ({ id, title, url, modules, cardComplete }: ICustomerCard) => {\r\n\r\n    \r\n    return (\r\n        <article className=\"customer-card\">\r\n        <Link className=\"customer-card-body-link\" to={`${url}/${id}`}></Link>\r\n            <Heading as=\"h4\">{title}</Heading>\r\n            <section className=\"customer-card-body\">\r\n                <Link className=\"modules-link\" to={`${url}/${id}/basicInformation`}><Icon color={modules.user ? \"#00C9A7\" : \"#a0a4a7\"} icon={userIcon} /></Link>\r\n                <Link className=\"modules-link\" to={`${url}/${id}/dependants`}><Icon color={modules.dependants ? \"#00C9A7\" : \"#000000\"}  icon={babyIcon} /></Link>\r\n                <Link className=\"modules-link\" to={`${url}/${id}/income`}><Icon color={modules.income ? \"#00C9A7\" : \"#00000\"}  icon={donateIcon} /></Link>\r\n                <Link className=\"modules-link\" to={`${url}/${id}/debts`}><Icon color={modules.debt ? \"#00C9A7\" : \"#00000\"}  icon={landmarkIcon} /></Link>\r\n                <Link className=\"modules-link\" to={`${url}/${id}/insurances`}><Icon color={modules.insurance ? \"#00C9A7\" : \"#00000\"}  icon={balanceScale} /></Link>\r\n                <Link className=\"modules-link\" to={`${url}/${id}/retirement`}><Icon color={modules.retirement ? \"#00C9A7\" : \"#00000\"}  icon={caravanIcon} /></Link>\r\n            </section>\r\n            <section className=\"customer-card-footer\">\r\n                <button className=\"modules-link card-delete\"><Icon icon={trashIcon} /></button>\r\n                <button className=\"modules-link card-complete\"><Icon color={cardComplete ? \"#00C9A7\" : \"#00000\"} icon={checkCircle} /></button>\r\n            </section>\r\n        </article>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { customers } from \"./Customers\";\r\nimport { CustomerCard } from '../CustomerCard/CustomerCard';\r\nimport { Container } from '../Container/Container';\r\nimport { Form } from '../Form/Form';\r\nimport { Input } from '../Input/Input';\r\nimport { BlockReveal } from '../BlockReveal/BlockReveal';\r\nimport { Heading } from '../Heading/Heading';\r\nimport { useRouteMatch } from 'react-router-dom';\r\n\r\nexport const CustomerList = () => {\r\n\r\n    const [search, setSearch] = React.useState<{ [key: string]: string }>({ search: \"\" });\r\n    const [customerList, setCustomerList] = React.useState<any[]>();\r\n    const { url } = useRouteMatch();\r\n\r\n    const handleSearch = (query: string) => {\r\n        const q = query\r\n            .split(\" \")\r\n            .filter(q => q.includes(\"completed\" || \"not-completed\"));\r\n        const searchWithoutWq = q.map(s => query.replace(s, \"\")).join(\"\").replace(\" \", \"\");\r\n        const cs = customers.filter(c => c.name.toLowerCase()\r\n            .includes(searchWithoutWq.toLowerCase() || query.toLowerCase()) || c.lastname.toLowerCase().includes(searchWithoutWq.toLowerCase() || query.toLowerCase()));\r\n        const wq = handleWildCards(query.toLowerCase());\r\n        let output = cs;\r\n        output = wq ? [...new Set(cs.concat(wq))] : cs;\r\n        if (cs.length && wq) {\r\n            output = cs.filter(c => wq.filter(q => q === c));\r\n        }\r\n        setCustomerList(output);\r\n    }\r\n    \r\n\r\n    const handleWildCards = (query: string) => {\r\n        const wildcardquery = query\r\n            .split(\" \")\r\n            .filter(q => q.includes(\"completed\" || \"not-completed\"))\r\n            .map(q => q.split(/=/));\r\n        if (wildcardquery[0]) {\r\n            const cs = wildcardquery.map(wq => {\r\n                return customers.filter(c => c.modules[wq[0]] === (wq[1] === \"completed\" ? true : false));\r\n            })\r\n            const queryResults = [];\r\n            for (let i = 0; i < cs.length; i++) {\r\n                for (let y = 0; y < cs[i].length; y++) {\r\n                    queryResults.push(cs[i][y]);\r\n                }\r\n            }\r\n            const output = [...new Set(queryResults)];\r\n            return output;\r\n        }\r\n    };\r\n\r\n    React.useEffect(() => {\r\n        setCustomerList(customers);\r\n        console.log(url);\r\n    }, []);\r\n\r\n    return (\r\n        <Container fluid classname=\"customers-list\">\r\n            <Container>\r\n                <Form onChange={() => handleSearch(search.search)} stateToUpdate={[search, setSearch]}>\r\n                    <Input id=\"customers-search\" label=\"Search\" value={search.search} muted=\"You can try searching by module. Ex.: user=completed\" />\r\n                </Form>\r\n            </Container>\r\n            <Container>\r\n                {customerList && customerList.map(c => <CustomerCard id={c.id} modules={c.modules} title={`${c.name} ${c.lastname}`} url={url} cardComplete={c.completed} key={c.id} />)}\r\n            </Container>\r\n        </Container>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { Switch, Route, useRouteMatch, useParams, Link } from 'react-router-dom';\r\nimport { TransitionRoute } from '../TransitionRoute/TransitionRoute';\r\nimport { FNA } from '../FNA/FNA';\r\nimport { CustomerList } from '../CustomersList/CustomerList';\r\nimport { router } from '../../router';\r\n\r\nexport const Main = () => {\r\n\r\n    const { path } = useRouteMatch();\r\n    console.log(\"path\", path);\r\n    return (\r\n        <main>\r\n            <Switch>\r\n                <Route exact path={path}>\r\n                    <CustomerList />\r\n                </Route>\r\n                <TransitionRoute path={`${path}/:id`}>\r\n                    <FNA />\r\n                </TransitionRoute>\r\n            </Switch>\r\n        </main>\r\n    );\r\n}\r\n","import React from 'react';\r\n\r\ninterface IButton extends React.DetailedHTMLProps<React.ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement> {\r\n    onClick: (ev: React.MouseEvent<HTMLButtonElement>) => void;\r\n    text: string;\r\n    isDisabled?: () => boolean;\r\n}\r\n\r\nexport const Button = ({onClick, text, isDisabled, ...rest}: IButton) => {\r\n    return (\r\n        <button className=\"button\" onClick={onClick} disabled={isDisabled ? isDisabled() : false} {...rest}>\r\n            {text}\r\n        </button>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { Form } from '../Form/Form';\r\nimport { Input } from '../Input/Input';\r\nimport { Link } from 'react-router-dom';\r\nimport { Button } from '../Button/Button';\r\n\r\nexport const Login = () => {\r\n\r\n    const [credentials, setCredentials] = React.useState<{[key: string]: string}>({\r\n        username: \"\",\r\n        password: \"\"\r\n    });\r\n\r\n    const isDisabled = () => {\r\n        if (credentials.username.length > 5 && credentials.username.includes(\"@\") && credentials.password.length > 3) return false;\r\n        return true;\r\n    }\r\n    \r\n    return (\r\n        <section className=\"login\">\r\n            <h1 className=\"login-hello\">Hello<span>.</span></h1>\r\n            <Form stateToUpdate={[credentials, setCredentials]}>\r\n                <Input label=\"Username\" type=\"email\" id=\"login-username\" value={credentials.username} autoComplete=\"username\" />\r\n                <Input label=\"Password\" type=\"password\" id=\"login-password\" autoComplete=\"current-password\" value={credentials.password} />\r\n            </Form>\r\n            <Button onClick={(ev) => console.log(ev)} text=\"Login\" isDisabled={isDisabled} />\r\n            <h1><span><Link to=\"/register\">Register</Link></span> to create an account<span>.</span></h1>\r\n        </section>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { Form } from '../Form/Form';\r\nimport { Input } from '../Input/Input';\r\nimport { Button } from '../Button/Button';\r\n\r\nexport const Register = () => {\r\n\r\n    const [registerInfo, setRegisterInfo] = React.useState<{ [key: string]: string }>({\r\n        firstname: \"\",\r\n        lastname: \"\",\r\n        emailAddress: \"\",\r\n        password: \"\",\r\n        reType: \"\"\r\n    });\r\n\r\n    const [passwordMatch, setPasswordMatch] = React.useState(false);\r\n\r\n    const handlePasswordMatch = () => {\r\n        if (registerInfo.reType.length && registerInfo.password.length) {\r\n            if (registerInfo.reType === registerInfo.password) {\r\n                return setPasswordMatch(true);\r\n            }\r\n        }\r\n    }\r\n\r\n    const isDisabled = () => {\r\n        if (registerInfo.firstname.length > 3) {\r\n            if (registerInfo.lastname.length > 3) {\r\n                if (registerInfo.emailAddress.length > 5 && registerInfo.emailAddress.includes(\"@\")) {\r\n                    if (passwordMatch) {\r\n                        return false;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return true;\r\n    }\r\n    \r\n    return (\r\n        <section className=\"register\">\r\n            <h1>Hello there<span>.</span></h1>\r\n            <Form stateToUpdate={[registerInfo, setRegisterInfo]} onChange={handlePasswordMatch}>\r\n                <Input id=\"register-firstname\" type=\"text\" label=\"Firstname\" value={registerInfo.firstname} />\r\n                <Input id=\"register-lastname\" type=\"text\" label=\"Lastname\" value={registerInfo.lastname} />\r\n                <Input id=\"register-emailAddress\" type=\"email\" label=\"Email\" value={registerInfo.emailAddress} autoComplete=\"username\" />\r\n                <Input id=\"register-password\" type=\"password\" label=\"Set a password\" value={registerInfo.password} autoComplete=\"new-password\" muted=\"Passwords should contain at least 1 number and minimum 8 characters\" />\r\n                <Input id=\"register-reType\" type=\"password\" label=\"Type it again\" value={registerInfo.reType} />\r\n            </Form>\r\n            <Button onClick={() => console.log(\"gotcha\")} text=\"Register\" isDisabled={isDisabled} />\r\n            <h1><span>Nice</span> to meet you.</h1>\r\n        </section>\r\n    );\r\n}\r\n","import { router } from \"../../router\";\r\n\r\nexport const locations = {\r\n    [router.home]: [\r\n        {\r\n            text: \"Home\",\r\n            path: router.home\r\n        },\r\n        {\r\n            text: \"Login\",\r\n            path: router.login\r\n        },\r\n        {\r\n            text: \"Register\",\r\n            path: router.register\r\n        },\r\n        {\r\n            text: \"Customers\",\r\n            path: router.customers\r\n        }\r\n    ],\r\n    [router.login]: [\r\n        {\r\n            text: \"Home\",\r\n            path: router.home\r\n        },\r\n        {\r\n            text: \"Register\",\r\n            path: router.register\r\n        },\r\n        {\r\n            text: \"Customers\",\r\n            path: router.customers\r\n        }\r\n    ],\r\n    [router.register]: [\r\n        {\r\n            text: \"Home\",\r\n            path: router.home\r\n        },\r\n        {\r\n            text: \"Login\",\r\n            path: router.login\r\n        },\r\n        {\r\n            text: \"Customers\",\r\n            path: router.customers\r\n        }\r\n    ],\r\n    [router.customers]: [\r\n        {\r\n            text: \"Home\",\r\n            path: router.home\r\n        },\r\n        {\r\n            text: \"Disconnect\",\r\n            path: router.login\r\n        },\r\n        {\r\n            text: \"Create New Customer\",\r\n            path: router.register\r\n        },\r\n        {\r\n            text: \"Go To Last Customer\",\r\n            path: router.register\r\n        }\r\n    ],\r\n    [`${router.customers}${router.basicInformation}`]: [\r\n        {\r\n            text: \"Home\",\r\n            path: router.home\r\n        },\r\n        {\r\n            text: \"Disconnect\",\r\n            path: router.login\r\n        },\r\n        {\r\n            text: \"Create New Customer\",\r\n            path: router.register\r\n        },\r\n        {\r\n            text: \"Go To Last Customer\",\r\n            path: router.register\r\n        }\r\n    ]\r\n}","import React from 'react';\r\n\r\ninterface IButtonContextNav {\r\n    onClick: () => void;\r\n    children: React.ReactNode | JSX.Element | JSX.Element[]\r\n    show: boolean\r\n}\r\n\r\nexport const ContextNavButton = ({onClick, children, show}: IButtonContextNav) => {\r\n    return (\r\n        <div className={`context-nav-button${show ? \" show\" : \"\"}`}>\r\n            <div onClick={onClick} className=\"context-nav-button-container\">\r\n                    <div className=\"context-nav-buttons\"></div>\r\n                    <div className=\"context-nav-buttons\"></div>\r\n                    <div className=\"context-nav-buttons\"></div>\r\n            </div>\r\n            {children}\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { useLocation, Link, useParams, useRouteMatch } from 'react-router-dom';\r\nimport { locations } from \"./locations\";\r\nimport { ContextNavButton } from './ContextNavButton';\r\ninterface IItem {\r\n    text: string;\r\n    path: string;\r\n}\r\n\r\nexport const ContextualNavbar = () => {\r\n    const [show, setShow] = React.useState(false);\r\n    const [items, setItems] = React.useState<IItem[]>([]);\r\n\r\n    const handleShow = () => setShow(!show);\r\n\r\n    const location = useLocation();\r\n    const { path, url } = useRouteMatch();\r\n\r\n    React.useEffect(() => {\r\n        const loc = location.pathname.match(/\\d/) ? `${location.pathname}`.replace(/\\/\\d+/, \"\") : location.pathname;\r\n        console.log(location, path, url);\r\n        console.log(\"loc\", loc);\r\n        setItems(locations[loc]);\r\n    }, [location, items]);\r\n\r\n    return (\r\n        <ContextNavButton onClick={handleShow} show={show}>\r\n            <div className=\"context-nav-container\">\r\n                <nav className=\"context-nav\">\r\n                    <ul>\r\n                        {items.map(i => <li onClick={handleShow} key={i.path}><Link to={i.path}>{i.text}</Link></li>)}\r\n                    </ul>\r\n                </nav>\r\n            </div>\r\n        </ContextNavButton>\r\n    );\r\n}\r\n","import React from 'react';\nimport { Switch } from 'react-router-dom';\nimport { PrivateRoute } from '../PrivateRoute/PrivateRoute';\nimport { Main } from '../Main/Main';\nimport { Login } from '../Login/Login';\nimport { Register } from '../Register/Register';\nimport { ContextualNavbar } from '../ContextualNavbar/ContextualNavbar';\nimport { router } from '../../router';\nimport { TransitionRoute } from '../TransitionRoute/TransitionRoute';\n\nfunction App() {\n  return (\n    <>\n      <ContextualNavbar />\n      <Switch>\n        <PrivateRoute exact path={router.customers}>\n          <Main />\n        </PrivateRoute>\n        <TransitionRoute path={router.login}>\n          <Login />\n        </TransitionRoute>\n        <TransitionRoute path={router.register}>\n          <Register />\n        </TransitionRoute>\n      </Switch>\n      <footer>\n\n      </footer>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App';\nimport { BrowserRouter } from \"react-router-dom\";\nimport { AppContextProvider } from \"./components/Context/AppContext\";\nimport \"./index.css\";\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <AppContextProvider>\n        <App />\n      </AppContextProvider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}